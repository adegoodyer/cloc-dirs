#!/bin/bash
#
# Author:       Ade Goodyer
# Date:         23rd Sept 2023
# Description:  Execute cloc . on all directories in current directory and output report
#               Will skip directories added to list
#

# list of directories to skip
skip_dirs=("app-build" "app" "data" "epos" "socket" "stack")

# generate a timestamp in the format YYYY-MM-DD-HHMMSS
# output file name with timestamp hash
timestamp=$(date +'%Y%m%d%H%M%S')
output_file="cloc-dir-report-$timestamp"

# flag to indicate whether to call dataframe.py
call_dataframe=false

# Parse command line arguments
while [[ $# -gt 0 ]]; do
  case "$1" in
  -ad | --analyse-data)
    call_dataframe=true
    shift
    ;;
  *)
    echo "Unknown option: $1"
    exit 1
    ;;
  esac
done

# check if a command is available
command_exists() {
  command -v "$1" >/dev/null 2>&1
}

# check if cloc is installed
if ! command_exists cloc; then
  echo "Error: cloc is not installed. Please install it and try again."
  exit 1
fi

# iterate through subdirectories in the current directory
for dir in */; do
  skip=false

  # check if $dir should be skipped
  for skip_dir in "${skip_dirs[@]}"; do
    if [ "$skip_dir/" == "$dir" ]; then
      skip=true
      break
    fi
  done

  if [ "$skip" == true ]; then
    echo "Skipping $dir"
  else
    echo "Processing $dir"
    echo >>"$output_file"
    echo "$dir" >>"$output_file"
    (cd "$dir" && cloc --quiet --hide-rate --exclude-dir=tests,_helm,helm .) >>"$output_file"
  fi
done

# Remove lines beginning with "github.com" from the report
grep -v "^github\.com" "$output_file" >"${output_file}.tmp"
mv "${output_file}.tmp" "$output_file"

# Print the path of the report file
echo
echo "Report saved as $(realpath "$output_file")"

# Call cloc-dirs-data-analysis if the flag is set
if [ "$call_dataframe" == true ]; then
  cloc-dirs-data-analysis "$(realpath "$output_file")"
fi
